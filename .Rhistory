newvals <- factor(c("No", "Yes", "Yes"))
pg$treatment <- newvals[match(pg$group, oldvals)]
pg
pg$treatment[pg$group == "ctrl"] <- "no"
pg$treatment[pg$group == "trt1"] <- "yes"
pg$treatment[pg$group == "trt2"] <- "yes"
pg
#convert to a factor
pg$treatment <- factor(pg$treatment)
pg
pg <- PlantGrowth
pg$newcol[pg$group == "ctrl" & pg$weight < 5] <- "no_small"
pg$newcol[pg$group == "ctrl" & pg$weight >= 5] <- "no_large"
pg$newcol[pg$group == "trt1"] <- "yes"
pg$newcol[pg$group == "trt2"] <- "not"
pg
pg$newcol<- factor(pg$newcol)
pg
str(pg)
pg$weighttrt <- interaction(pg$weight, pg$group)
pg
?cut
pg <- PlantGrowth
pg <- PlantGrowth[c(1,2,3,7,9,11),]
pg
pg$wtclass <- cut(pg$weight, breaks = c(0,5,6,Inf))
pg
pg <- PlantGrowth[c(1,2,11,21,22),]
pg
pg$wtclass <- cut(pg$weight, breaks = c(0,5,6,Inf))
pg
pg$wtclass <- cut(pg$weight,
breaks = c(0,5,6,Inf),
labels = c"Sm", "Md", "Lg")
pg
s
s
pg$wtclass <- cut(pg$weight, breaks = c(0,5,6,Inf))
pg
pg$wtclass <- cut(pg$weight,
breaks = c(0,5,6,Inf),
labels = c"Sm", "Md", "Lg")
pg
pg$wtclass <- cut(pg$weight, breaks = c(0,5,6,Inf))
pg
pg$wtclass <- cut(pg$weight,
breaks = c(0,5,6,Inf),
labels = c("Sm", "Md", "Lg"))
pg
cut(pg$weight, breaks = c(0,5,6,Inf), right = FALSE)
View(heightweight)
View(heightweight)
str(heightweight)
head(heightweight,2)
tail(heightweight,2)
hw <- heightweight
hw
hw$hightCm <- hw$heightIn * 2.54
hw
hw <- transform(hw,
heightCm = heightIn * 2.54,
weighKg = weightLb / 2.204)
hw
hw <- mutate(hw,
heightCm = heightIn * 2.54,
weighKg = weightLb / 2.204)
hw
hw <- transform(hw,
bmi = wightKg / (heightCm / 100)^2)
hw <- transform(hw,
bmi = weighKg / (heightCm / 100)^2)
hw <- mutate(hw,
bmi = wightKg / (heightCm / 100)^2)
hw <- mutate(hw,
bmi = weighKg  / (heightCm / 100)^2)
hw <- transform(hw,
bmi = weighKg / (heightCm / 100)^2)
hw
hw <- mutate(hw,
bmi = weighKg  / (heightCm / 100)^2)
hw
hw$bmi <- hw$weighKg / (hw$heightCm/100)^2
hw
hw <- heightweight
hw <- mutate(hw,
heightCm = heightIn * 2.54,
weightKg = weightLb / 2.204,
bmi = weightKg / (heightCm /100)^2)
hw
library(MASS)
view(cabbages)
str(cabbages)
cb <- ddply(cabbages, "Cult", transform, DevWt = HeadWt - mean(HeadWt))
cb
transform(cabbages, DevWt = HeadWt - mean(HeadWt))
cb <- ddply(cabbages, "Cult", transform, DevWt = HeadWt - mean(HeadWt))
cb
head(cb, 3)
head(cb, 3)
#the data before normalizing
cb %>%
ggplot(aes(
x = Cult,
y = HeadWt
))+
geom_boxplot()
#after normalizing
cb %>%
ggplot(aes(
x = Cult,
y = DevWt
))+
geom_boxplot()
ddply(cabbages,
c("Cult", "Date"),
transform,
devWt = HeadWt - mean(HeadWt),
DevVitc = VitC - mean(VitC))
ddply(cabbages,
c("Cult", "Date"),
summarise,
Weight = mean(HeadWt),
VitV = mean(VitC))
head(cabbages, 3)
ddply(cabbages,
c("Cult", "Date"),
summarise,
Weight = mean(HeadWt),
VitC = mean(VitC))
head(cabbages, 3)
summarise(cabbages, Weight = mean(HeadWt))
ddply(cabbages, "Cult", summarise Weight = mean(HeadWt))
ddply(cabbages,
"Cult",
summarise,
Weight = mean(HeadWt))
ddply(cabbages,
c("Cult", "Date"),
summarise,
Weight = mean(HeadWt),
VitC = mean(VitC))
ddply(cabbages,
c("Cult", "Date"),
summarise,
Weight = mean(HeadWt),
sd = sd(HeadWt),
n = lenght(HeadWt))
ddply(cabbages,
c("Cult", "Date"),
summarise,
Weight = mean(HeadWt),
sd = sd(HeadWt),
n = length(HeadWt))
x <- cabbages
x <- cabbages
x$HeadWt[c(1,2,45)] <- NA #set some values to NA
ddply(x,
c("Cult", "Date"),
summarise,
Weight = mean(HeadWt),
sd = sd(HeadWt),
n = length(HeadWt))
ddply(x,
c("Cult", "Date"),
summarise,
Weight = mean(HeadWt, na.rm = TRUE),
sd = sd(HeadWt), na.rm = TRUE),
N = sum(!is.na(HeadWt))
x
ddply(x,
c("Cult", "Date"),
summarise,
Weight = mean(HeadWt),
sd = sd(HeadWt),
n = length(HeadWt))
#para no mostrar resultados que tiene NA's
x
ddply(x,
c("Cult", "Date"),
summarise,
Weight = mean(HeadWt, na.rm = TRUE),
sd = sd(HeadWt, na.rm = TRUE),
N = sum(!is.na(HeadWt)))
ddply(x,
c("Cult", "Date"),
summarise,
Weight = mean(HeadWt, na.rm = TRUE),
sd = sd(HeadWt, na.rm = TRUE),
n = sum(!is.na(HeadWt)))
# Copy cabbages and remove all rows with both c52 and d21
y <- subset(x,
!(Cult == "c52" & Date == "d21"))
y
cabba
z <- ddply(y,
c("Cult", "Date"),
summarise,
Weight = mean(HeadWt, na.rm = TRUE),
sd = sd(HeadWt, na.rm = TRUE),
n = sum(!is.na(HeadWt)))
z
x %>%
ggplot(aes(
x = Date,
fill = Cult,
y = Weight
))+
geom_bar(position = "dodge")
x %>%
ggplot(aes(
x = Date,
y = Weight
fill = Cult
x %>%
ggplot(aes(
x = Date,
y = Weight,
fill = Cult
))+
geom_bar(position = "dodge")
x
ddply(x,
c("Cult", "Date"),
summarise,
Weight = mean(HeadWt, na.rm = TRUE),
sd = sd(HeadWt, na.rm = TRUE),
n = sum(!is.na(HeadWt))) %>%
ggplot(aes(
x = Date,
y = Weight,
fill = Cult
))+
geom_bar(position = "dodge")
gr1 <- ddply(x,
c("Cult", "Date"),
summarise,
Weight = mean(HeadWt, na.rm = TRUE),
sd = sd(HeadWt, na.rm = TRUE),
n = sum(!is.na(HeadWt)))
gr1 %>%
ggplot(aes(
x = Date,
y = Weight,
fill = Cult
))+
geom_bar(position = "dodge")
gr1 <- ddply(x,
c("Cult", "Date"),
summarise,
Weight = mean(HeadWt, na.rm = TRUE),
sd = sd(HeadWt, na.rm = TRUE),
n = sum(!is.na(HeadWt)))
gr1 %>%
ggplot(aes(
x = Date,
y = Weight,
fill = Cult
))+
geom_bar(position = "dodge")
y
y %>%
ggplot(aes(
x = Date,
y = Weight,
fill = Cult
))+
geom_bar(position = "dodge")
x1 <- ddply(x,
c("Cult", "Date"),
summarise,
Weight = mean(HeadWt, na.rm = TRUE),
sd = sd(HeadWt, na.rm = TRUE),
n = sum(!is.na(HeadWt)))
# Copy cabbages and remove all rows with both c52 and d21
y <- subset(x1,
!(Cult == "c52" & Date == "d21"))
z <- ddply(y,
c("Cult", "Date"),
summarise,
Weight = mean(HeadWt, na.rm = TRUE),
sd = sd(HeadWt, na.rm = TRUE),
n = sum(!is.na(HeadWt)))
z
# Copy cabbages and remove all rows with both c52 and d21
y <- subset(x1,
!(Cult == "c52" & Date == "d21"))
z <- ddply(y,
c("Cult", "Date"),
summarise,
Weight = mean(HeadWt, na.rm = TRUE),
sd = sd(HeadWt, na.rm = TRUE),
n = sum(!is.na(HeadWt)))
y
z <- ddply(x1,
c("Cult", "Date"),
summarise,
Weight = mean(HeadWt, na.rm = TRUE),
sd = sd(HeadWt, na.rm = TRUE),
n = sum(!is.na(HeadWt)))
# Copy cabbages and remove all rows with both c52 and d21
c2 <- subset(x, !( Cult=="c52" & Date=="d21" ) )
c2a <- ddply(c2, c("Cult", "Date"), summarise,
Weight = mean(HeadWt, na.rm=TRUE),
sd = sd(HeadWt, na.rm=TRUE),
n = sum(!is.na(HeadWt)))
c2a
c2a %>%
ggplot(aes(
x = Date,
y = Weight,
fill = Cult
))+
geom_bar(position = "dodge")
c2a <- ddply(c2, c("Cult", "Date"), summarise,
Weight = mean(HeadWt, na.rm=TRUE),
sd = sd(HeadWt, na.rm=TRUE),
n = sum(!is.na(HeadWt)))
c2a %>%
ggplot(aes(
x = Date,
y = Weight,
fill = Cult
))+
geom_bar(position = "dodge")
c2a %>%
ggplot(aes(
x = Date,
fill = Cult
))+
geom_bar(position = "dodge")
c2a %>%
ggplot(aes(
x = Date,
fill = Cult,
y = Weight
))+
geom_bar(position = "dodge")
c2a %>%
ggplot(aes(
x = Date,
fill = Cult,
y = Weight
))+
geom_bar(position = "dodge",
stat = "identity")
c2b <- ddply(c2,
c("Cult", "Date"),
.drop = FALSE,
summarise,
Weight = mean(HeadWt, na.rm = TRUE),
sd = sd(HeadWt, na.rm = TRUE),
n = sum(!is.na(HeadWt)))
c2b
c2b %>%
ggplot(aes(
x = Date,
y = Weight,
fill = Cult
))+
geom_bar(position = "dodge",
stat = "identity")
ca <- ddply(cabbages,
c("Cult", "Date"),
summarise,
Weight = mean(HeadWt, na.rm = TRUE),
sd = sd(HeadWt, na.rm = TRUE),
n = sum(!is.na(HeadWt)),
se = sd/sqrt(n))
ca
ddply(cabbages,
c("Cult", "Date"),
summarise,
Weight = mean(HeadWt, na.rm=TRUE),
sd = sd(HeadWt, na.rm=TRUE),
n = sum(!is.na(HeadWt)),
se = sd / sqrt(n))
ciMult
ciMult <- qt(.975, ca$n - 1)
ciMult
ca$ci <- ca$se * ciMult
ca
#Podríamos haber hecho todo esto en una sola línea, así:
ca$ci95 <- ca$se * at(.975, ca$n)
#Podríamos haber hecho todo esto en una sola línea, así:
ca$ci95 <- ca$se * qt(.975, ca$n)
summarySE <- function(data=NULL, measurevar, groupvars=NULL,
conf.interval=.95, na.rm=FALSE, .drop=TRUE) {
require(plyr)
# New version of length that can handle NAs: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else length(x)
}
# This does the summary
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col, na.rm) {
c( n = length2(xx[,col], na.rm=na.rm),
mean = mean (xx[,col], na.rm=na.rm),
sd = sd (xx[,col], na.rm=na.rm)
)
},
measurevar,
na.rm
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$n) # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use
# df=n-1, or if n==0, use df=0
ciMult <- qt(conf.interval/2 + .5, datac$n-1)
datac$ci <- datac$se * ciMult
return(datac)
}
# Remove all rows with both c52 and d21
c2 <- subset(cabbages, !( Cult=="c52" & Date=="d21" ) )
# Set some values to NA
c2$HeadWt[c(1,20,45)] <- NA
summarySE(c2, "HeadWt", c("Cult", "Date"), conf.interval=.99,
na.rm=TRUE, .drop=FALSE)
view(anthoming)
str(anthoming)
head(anthoming,2)
tain(anthoming,2)
tail(anthoming,2)
str(anthoming)
head(anthoming,2)
tail(anthoming,2)
library(reshape2)
melt(anthoming,
id.vars = "angle",
variable.name = "condition",
value.name = "count")
melt(anthoming,
id.vars = "angulo",
variable.name = "Experimental",
value.name = "control")
str(anthoming)
library(reshape2)
melt(anthoming, id.vars="angle", variable.name="condition", value.name="count")
library(reshape2)
melt(anthoming, id.vars="angle", variable.name="condition", value.name="count")
melt(anthoming, id.vars="angulo", variable.name="condition", value.name="count")
melt(anthoming, id.vars="Angulo", variable.name="condition", value.name="count")
head(anthoming,2)
melt(anthoming, id.vars="Angulo", variable.name="condition", value.name="count")
view(drunk)
str(drunk)
melt(drunk,
id.vars = "sex",
measure.vars = c("0-29", "30-39"),
variable.name = "age",
value.name = "count")
view(plum_wide)
str(plum_wide)
melt(plum_wide,
id.vars = c("length", "time"),
variable.name = "survival",
value.name = "count")
view(corneas)
str(corneas)
co <- corneas
co$id <- 1:nrow(co)
co
melt(co,
id.vars = "id",
variable.name = "eye",
value.name = "thickness")
view(plum)
dcast(plum,
length + time ~ survival,
value.var = "count")
dcast(plum,
time ~ lenght + survival,
value.var = "count")
dcast(plum,
time ~ length + survival,
value.var = "count")
view(nhtemp)
str(nhtemp)
length(nhtemp)
# Get times for each observation
as.numeric(time(nhtemp))
# Get value of each observation
as.numeric(nhtemp)
# Get times for each observation
x <- as.numeric(time(nhtemp))
# Get value of each observation
y <- as.numeric(nhtemp)
#put them in a data frame
df <- data.frame(x, y)
df
view(presidents)
str(presi)
str(presid)
str(presidents)
rating = as.numeric(presidents))
pres_rating <- data.frame(
year = as.numeric(time(presidents)),
rating = as.numeric(presidents))
pres_rating
pres_rating <- data.frame(
year = round(as.numeric(time(presidents),0)),
rating = as.numeric(presidents))
pres_rating
pres_rating_2 <- data.frame(
year = as.numeric(floor(time(presidents))),
quarter = as.numeric(cycle(presidents)),
rating = as.numeric(presidents)
)
pres_rating_2
