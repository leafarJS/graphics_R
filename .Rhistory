))+
geom_line()
y %>%
ggplot(aes(
x = month,
y = deaths
))+
geom_line()+
scale_x_continuous(breaks = 1:12)
y %>%
ggplot(aes(
x = month,
y = deaths
))+
geom_line()+
scale_x_continuous(breaks = 1:12)+
coord_polar()
y %>%
ggplot(aes(
x = month,
y = deaths
))+
geom_line()+
scale_x_continuous(breaks = 1:12)+
coord_polar()+
ylim(0, max(y$deaths))
y %>%
ggplot(aes(
x = month,
y = deaths
))+
geom_line()+
scale_x_continuous(breaks = 1:12)+
coord_polar()+
ylim(0, max(y$deaths))+
xlim(0,12)
mdx <- y[y$month==12,]
mdx
mdx$month <- 0
mdx
mdnew <- rbind(mdx, y)
mdnew
y %+% +
mdnew+
coord_polar()+
ylim(0, max(y$deaths))
y %>%
ggplot(aes(
x = month,
y = deaths
))+
geom_line()+
scale_x_continuous(breaks = 1:12) %+% +
mdnew+
coord_polar()+
ylim(0, max(y$deaths))
circle <- y %>%
ggplot(aes(
x = month,
y = deaths
))+
geom_line()+
scale_x_continuous(breaks = 1:12)
circle %+% +
mdnew+
coord_polar()+
ylim(0, max(y$deaths))
view(economics)
str(economics)
head(economics, 3)
economics %>%
ggplot(aes(
x = date,
y = psavert
))+
geom_line()
eco <- subset(economics, date >= as.Date("1992-05-01") &
date < as.Date("1993-06-01"))
eco
eco %>%
ggplot(aes(
x = date,
y = psavert
))+geom_line()
x %>%
ggplot(aes(
x = date,
y = psavert
))+geom_line()
x
+geom_line()
x
x <- eco %>%
ggplot(aes(
x = date,
y = psavert
))
x
+geom_line()
x
+geom_line()
eco
eco %>%
ggplot(aes(
x = date,
y = psavert
))
x <- eco %>%
ggplot(aes(
x = date,
y = psavert
))
x
eco <- subset(economics, date >= as.Date("1992-05-01") &
date < as.Date("1993-06-01"))
eco
+geom_line()
view(eco)
+geom_line()
x
eco <- subset(economics, date >= as.Date("1992-05-01") &
date < as.Date("1993-06-01"))
x <- eco %>%
ggplot(aes(
x = date,
y = psavert
))
x
datebreaks <- seq(as.Date("1992-06-01"),
as.Date("1993-06-01"),
by = "2 month")
datebreaks <- seq(as.Date("1992-06-01"),
as.Date("1993-06-01"),
by = "2 month")
x + scale_x_date(breaks = datebreaks)+
theme(axis.text.x = element_text(angle = 30, hjust = 1))
x + scale_x_date(breaks=datebreaks,
labels=date_format("%Y %b")) +
theme(axis.text.x = element_text(angle=30,
hjust=1))
eco
x <- eco %>%
ggplot(aes(
x = date,
y = psavert
))
datebreaks <- seq(as.Date("1992-06-01"),
as.Date("1993-06-01"),
by = "2 month")
x + scale_x_date(breaks = datebreaks)+
theme(axis.text.x = element_text(angle = 30, hjust = 1))
x + scale_x_date(breaks=datebreaks,
labels=date_format("%Y %b")) +
theme(axis.text.x = element_text(angle=30,
hjust=1))
# Take a subset of economics
econ <- subset(economics, date >= as.Date("1992-05-01") &
date < as.Date("1993-06-01"))
# Base plot - without specifying breaks
p <- ggplot(econ, aes(x=date, y=psavert)) + geom_line()
p
datebreaks <- seq(as.Date("1992-06-01"),
as.Date("1993-06-01"),
by = "2 month")
r
datebreaks <- seq(as.Date("1992-06-01"),
as.Date("1993-06-01"),
by = "2 month")
p + scale_x_date(breaks = datebreaks)+
theme(axis.text.x = element_text(angle = 30, hjust = 1))
x + scale_x_date(breaks=datebreaks,
labels=date_format("%Y %b")) +
theme(axis.text.x = element_text(angle=30,
hjust=1))
p + scale_x_date(breaks = datebreaks,
labels = date_format("%Y %b"))+
theme(axis.text.x = element_text(angle = 30, hjust = 1))
Sys.setlocale("LC_TIME", "italian")
view(WWWusage)
str(WWWusage)
www <- data.frame(minute = as.numeric(time(WWWusage)),
users = as.numeric(WWWusage))
www
timeHM_formatter <- function(x) {
h <- floor(x/60)
m <- floor(x %% 60)
lab <- sprintf("%d:%02d", h, m) # Format the strings as HH:MM
return(lab)
}
www %>%
ggplot(aes(
x = minute,
y = users
))+
geom_line()
#with formatted times
www %>%
ggplot(aes(
x = minute,
y = users
))+
geom_line()+
scale_x_continuous(name = "time",
breaks = seq(0,100, by = 10),
labels = timeHMS_formatter)
timeHM_formatter <- function(x) {
h <- floor(x/60)
m <- floor(x %% 60)
lab <- sprintf("%d:%02d", h, m) # Format the strings as HH:MM
return(lab)
}
#with formatted times
www %>%
ggplot(aes(
x = minute,
y = users
))+
geom_line()+
scale_x_continuous(name = "time",
breaks = seq(0,100, by = 10),
labels = timeHMS_formatter)
#with formatted times
www %>%
ggplot(aes(
x = minute,
y = users
))+
geom_line()+
scale_x_continuous(name = "time",
breaks = seq(0,100, by = 10),
labels = timeHM_formatter)
www %>%
ggplot(aes(
x = minute,
y = users
))+
geom_line()+
scale_x_continuous(breaks=c(0, 20, 40, 60, 80, 100),
labels=c("0:00", "0:20", "0:40", "1:00", "1:20", "1:40"))
timeHM_formatter(c(0, 50, 51, 59, 60, 130, 604))
timeHMS_formatter <- function(x) {
h <- floor(x/3600)
m <- floor((x/60) %% 60)
s <- round(x %% 60) # Round to nearest second
lab <- sprintf("%02d:%02d:%02d", h, m, s) # Format the strings as HH:MM:SS
lab <- sub("^00:", "", lab) # Remove leading 00: if present
lab <- sub("^0", "", lab) # Remove leading 0 if present
return(lab)
}
timeHMS_formatter(c(20, 3000, 3075, 3559.2, 3600, 3606, 7813.8))
www %>%
ggplot(aes(
x = minute,
y = users
))+
geom_line()+
scale_x_continuous(name = "time",
breaks = seq(0,100, by = 10),
labels = timeHMS_formatter(c(20, 3000, 3075, 3559.2, 3600, 3606, 7813.8)))
www %>%
ggplot(aes(
x = minute,
y = users
))+
geom_line()+
scale_x_continuous(name = "time",
labels = timeHMS_formatter(c(20, 3000, 3075, 3559.2, 3600, 3606, 7813.8)))
library(tidyverse)
library(ggplot2)
library(gcookbook)
library(plyr)
view(heightweight)
str(heightweight)
#plot base
heightweight %>%
ggplot(aes(
x = ageYear,
y = heightIn
))+
geom_point()
#plot base
x <- heightweight %>%
ggplot(aes(
x = ageYear,
y = heightIn
))+
geom_point()
x
x + ggtitle("Edad y talla de los Escolares")
x + ggtitle("Edad y talla\n de los Escolares")
x + ggtitle("Edad y talla\nde los Escolares")
#move the title inside
x + ggtitle("Edad y Talla de los Escolares")+
theme(plot.title = element_text(vjust = -2.5))
x + annotate("text",
x = mean(range(heightweight$ageYear)),
y= Inf,
label = "Edad y Talla de los Escolares",
vjust = 1.5,
size = 6)
x + theme(axis.title = element_text(size = 16,
lineheight = .9,
family = "Times",
face = "bold.italic",
colour = "red"))
x + ggtitle("Edad y Talla\nde los Estudiantes")+
theme(axis.title = element_text(size = 16,
lineheight = .9,
family = "Times",
face = "bold.italic",
colour = "red"))
x + annotate("text",
x = 15,
y = 53,
label = "Some text",
size = 7,
family = "Times",
fontface = "bold.italic",
colour = "red")
x + geom_text(aes(
label = weightLb
),
size = 4,
family = "Verdana",
colour = "blue")
x + geom_text(aes(
label = weightLb
),
size = 3,
family = "Times",
colour = "red")
x + ggtitle("Edad y Talla\nde los Estudiantes")+
theme(axis.title = element_text(size = 16,
lineheight = .9,
family = "Times",
face = "bold.italic",
colour = "red"))
x + ggtitle("Edad y Talla\nde los Estudiantes")+
theme(plot.title = element_text(size = (1.5),
lineheight = .9,
family = "Times",
face = "bold.italic",
colour = "red"))
x + ggtitle("Edad y Talla\nde los Estudiantes")+
theme(plot.title = element_text(size = rel(1.5),
lineheight = .9,
family = "Times",
face = "bold.italic",
colour = "red"))
x + theme_grey()
#Black an white theme
x + theme_bw()
x + theme_grey(base_size = 16,
base_family = "Times")
theme_set(theme_bw())
x
theme_set(theme_minimal())
x
# Reset the default theme back to theme_grey()
theme_set(theme_grey())
x
x + theme(
panel.grid.major = element_line(colour = "red")
)
x + theme(
panel.grid.major = element_line(colour = "red"),
panel.grid.minor = element_line(colour = "blue",
linetyoe = "dotted",
size = 0.2)
)
x + theme(
panel.grid.major = element_line(colour = "red"),
panel.grid.minor = element_line(colour = "blue",
linetype = "dotted",
size = 0.2)
)
x + theme(
panel.grid.major = element_line(colour = "red"),
panel.grid.minor = element_line(colour = "blue",
linetype = "dotted",
size = 0.2),
panel.background = element_rect(fill = "#fb6a4a")
)
x + theme(
panel.grid.major = element_line(colour = "red"),
panel.grid.minor = element_line(colour = "blue",
linetype = "dotted",
size = 0.2),
panel.background = element_rect(fill = "#fb6a4a"),
panel.border = element_rect(colour = "blue",
fill = NA,
size = 2)
)
# Options for text items
x + ggtitle("Aqui Título del grafico")
x + ggtitle("Aqui Título del grafico")+
theme(
axis.title.x = element_text(colour = "red", size = 14),
axis.text.x = element_text(colour = "blue")
)
x + ggtitle("Aqui Título del grafico")+
theme(
axis.title.x = element_text(colour = "red", size = 14),
axis.text.x = element_text(colour = "blue"),
axis.title.y = element_text(colour = "red", size = 14, angle = 90),
axis.text.y = element_text(colour = "blue")
)
x + ggtitle("Aqui Título del grafico")+
theme(
axis.title.x = element_text(colour = "red", size = 14),
axis.text.x = element_text(colour = "blue"),
axis.title.y = element_text(colour = "red", size = 14, angle = 90),
axis.text.y = element_text(colour = "blue"),
plot.title = element_text(colour = "red", size = 20, face = "bold")
)
x +
theme(
legend.background = element_rect(fill = "grey85",
colour = "red",
size = 1)
)
x +
theme(
legend.background = element_rect(fill = "grey85",
colour = "red",
size = 1)
)
x +
theme(
legend.background = element_rect(fill = "grey85",
colour = "red",
size = 1),
legend.title = element_text(colour = "blue",
face = "bold",
size = 14)
)
x +
theme(
legend.background = element_rect(fill = "grey85",
colour = "red",
size = 1),
legend.title = element_text(colour = "blue",
face = "bold",
size = 14),
legend.text = element_text(colour = "red")
)
x +
theme(
legend.background = element_rect(fill = "grey85",
colour = "red",
size = 1),
legend.title = element_text(colour = "blue",
face = "bold",
size = 14),
legend.text = element_text(colour = "red"),
legend.key = element_rect(colour = "blue",
size = 0.25)
)
x + theme(
legend.background = element_rect(fill="grey85", colour="red", size=1),
legend.title = element_text(colour="blue", face="bold", size=14),
legend.text = element_text(colour="red"),
legend.key = element_rect(colour="blue", size=0.25))
x + theme(
legend.background = element_rect(fill="grey85", colour="red", size=1),
legend.title = element_text(colour="blue", face="bold", size=14),
legend.text = element_text(colour="red"),
legend.key = element_rect(colour="blue", size=0.25))
# Options for facets
x + facet_grid(sex ~ .)
x + facet_grid(sex ~ .)+
theme(
strip.background = element_rect(fill = "pink")
)
x + facet_grid(sex ~ .)+
theme(
strip.background = element_rect(fill = "pink"),
strip.text.y = element_text(size = 14,
angle = -90,
face = "bold")
)
x + facet_grid(sex ~ .)+
theme(
strip.background = element_rect(fill = "pink"),
strip.text.x = element_text(size = 14,
angle = -90,
face = "bold")
)
x + theme(
axis.title.x = element_text(colour = "red")
)+
theme_bw()
# theme() works if after a compete theme
x + theme_bw() +
theme(axis.title.x = element_text(color = "red",
size = 12))
my.theme <- theme_bw()+
theme(text = element_text(colour = "red"),
axis.title = element_text(size  =rel(1.25)))
x + my.theme
x + theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
x + theme(
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
x + theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()
)
